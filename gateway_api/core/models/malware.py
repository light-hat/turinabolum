from django.db import models

from .incident import Incident


class Malware(models.Model):
    MALWARE_TYPE_CHOICES = [
        ("RAT", "Remote Access Trojan"),
        ("Trojan", "Trojan"),
        ("Ransomware", "Ransomware"),
        ("Loader", "Loader"),
        ("Backdoor", "Backdoor"),
        ("Spyware", "Spyware"),
        ("Worm", "Worm"),
        ("Virus", "Virus"),
        ("Rootkit", "Rootkit"),
        ("Miner", "Cryptocurrency Miner"),
    ]

    name = models.CharField(
        max_length=255,
        unique=True,
        verbose_name="Название",
        help_text="Уникальное название вредоносного ПО (например, IcedID)",
    )
    description = models.TextField(
        blank=True,
        verbose_name="Описание",
        help_text="Подробное описание вредоносного ПО, функциональности, поведения и т.д.",
    )
    type = models.CharField(
        max_length=100,
        choices=MALWARE_TYPE_CHOICES,
        verbose_name="Тип",
        help_text="Тип вредоносного ПО",
    )
    aliases = models.TextField(
        blank=True,
        verbose_name="Псевдонимы",
        help_text="Известные псевдонимы и названия вредоносного ПО",
    )
    detection_names = models.TextField(
        blank=True,
        verbose_name="Названия детектов",
        help_text="Названия детектов в различных антивирусных решениях",
    )
    created_date = models.DateTimeField(
        auto_now_add=True,
        verbose_name="Дата создания",
        help_text="Дата и время добавления вредоносного ПО в систему",
    )
    modified_date = models.DateTimeField(
        auto_now=True,
        verbose_name="Дата изменения",
        help_text="Дата и время последнего обновления информации о вредоносном ПО",
    )

    class Meta:
        verbose_name = "Вредоносное ПО"
        verbose_name_plural = "Вредоносные ПО"
        ordering = ["name"]

    def __str__(self):
        return self.name


class IncidentMalware(models.Model):
    incident = models.ForeignKey(
        Incident,
        on_delete=models.CASCADE,
        verbose_name="Инцидент",
        help_text="Инцидент, связанный с вредоносным ПО",
    )
    malware = models.ForeignKey(
        Malware,
        on_delete=models.CASCADE,
        verbose_name="Вредоносное ПО",
        help_text="Вредоносное ПО, связанное с инцидентом",
    )
    version = models.CharField(
        max_length=100,
        blank=True,
        verbose_name="Версия",
        help_text="Версия или вариант вредоносного ПО, если известно",
    )
    evidence = models.TextField(
        blank=True,
        verbose_name="Доказательства",
        help_text="Доказательства наличия вредоносного ПО в инциденте",
    )
    created_date = models.DateTimeField(
        auto_now_add=True,
        verbose_name="Дата создания",
        help_text="Дата и время установления связи",
    )

    class Meta:
        verbose_name = "Связь инцидента с вредоносным ПО"
        verbose_name_plural = "Связи инцидентов с вредоносным ПО"
        unique_together = ("incident", "malware")

    def __str__(self):
        return f"{self.incident} - {self.malware}"
