name: Test deploy

# Required secrets
#
# SERVER_IP:      Server IP
# SSH_USER:       SSH username
# SSH_KEY:        Private SSH key

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - feature/*

jobs:
  dev_deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Apt update & setup packages
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.SERVER_IP }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              apt update
              apt -y install git make vim tmux
          id: deploy
      - name: Setup Docker
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.SERVER_IP }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              sudo apt-get update
              sudo apt-get install ca-certificates curl
              sudo install -m 0755 -d /etc/apt/keyrings
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              sudo chmod a+r /etc/apt/keyrings/docker.asc

              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              
              sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          id: deploy
      - name: Start Stack
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            WORK_DIR="/home/dev/"
            
            if [ ! -d "$WORK_DIR" ]; then
              git clone https://github.com/light-hat/turinabolum -b ${{ github.ref_name }} $WORK_DIR/
              cd $WORK_DIR
            else
              cd $WORK_DIR
              git fetch ${{ github.ref_name }}
              git checkout ${{ github.ref_name }}
              git pull origin ${{ github.ref_name }}
            fi

            make docker
            make dev DEV_HOSTNAME=${{ secrets.SERVER_IP }}

            echo ---------------------------------------------
            echo DOCKER CONTAINERS
            echo ---------------------------------------------
            docker compose -f docker-compose/dev/docker-compose.yml ps

            echo ---------------------------------------------
            echo LOGS
            echo ---------------------------------------------

            docker compose -f docker-compose/dev/docker-compose.yml logs

            echo "Deployed to dev environment"
        id: deploy
