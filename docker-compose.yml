services:
  minio:
    image: minio/minio
    container_name: minio_server
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: mybucket
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - turinabol_net

  db:
    image: postgres:17-alpine
    container_name: postgresql
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    restart: always
    networks:
      - turinabol_net

  redis:
    image: redis:7.0.15
    container_name: redis
    expose:
      - 6379
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - turinabol_net

  os01:
    image: opensearchproject/opensearch:2.19.1
    environment:
      OPENSEARCH_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      node.name: os01
      discovery.seed_hosts: os01 #,os02,os03
      cluster.initial_master_nodes: os01 #,os02,os03
      plugins.security.ssl.transport.pemkey_filepath: certificates/os01/os01.key
      plugins.security.ssl.transport.pemcert_filepath: certificates/os01/os01.pem
      plugins.security.ssl.http.pemkey_filepath: certificates/os01/os01.key
      plugins.security.ssl.http.pemcert_filepath: certificates/os01/os01.pem
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      JAVA_HOME: /usr/share/opensearch/jdk
      bootstrap.memory_lock: "true"
      network.host: "0.0.0.0"
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./opensearch/opensearch.yml:/usr/share/opensearch/config/opensearch.yml"
      - "os-data1:/usr/share/opensearch/data"
      - "./opensearch/certs:/usr/share/opensearch/config/certificates:ro"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
    expose:
      - 9200
      - 9600
    restart: always
    networks:
      - turinabol_net

  gateway:
    build:
      context: gateway_api
      dockerfile: Dockerfile
    image: turinabolum:latest
    container_name: turinabolum
    ports:
      - "8000:8000"
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=mybucket
      - MINIO_ENDPOINT_URL=http://minio:9000
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_ENV=settings
      - API_HOST=127.0.0.1
      - API_PORT=80
      - OPENSEARCH_HOST=os01
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=admin
      - OPENSEARCH_PASSWORD=admin
    depends_on:
      - minio
      - db
      - redis
      - os01
    restart: always
    networks:
      - turinabol_net

  # frontend:
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #     args:
  #       - VITE_API_BASE_URL=http://localhost:8000/api/v1
  #   image: turinabolum-frontend:latest
  #   container_name: turinabolum-frontend
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - gateway
  #   restart: always
  #   networks:
  #     - turinabol_net

  kibana:
    restart: always
    image: opensearchproject/opensearch-dashboards:2.19.1
    environment:
      OPENSEARCH_HOSTS: '["https://os01:9200"]'
      DISABLE_INSTALL_DEMO_CONFIG: "true"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
    volumes:
      - "./opensearch/certs:/usr/share/opensearch-dashboards/config/certificates:ro"
      - "./opensearch/opensearch-dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml"
    ports:
      - 5601:5601

  worker:
    build:
      context: gateway_api
      dockerfile: Dockerfile
    image: turinabolum:latest
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=mybucket
      - MINIO_ENDPOINT_URL=http://minio:9000
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_ENV=settings
      - API_HOST=127.0.0.1
      - API_PORT=80
      - OPENSEARCH_HOST=os01
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_USER=admin
      - OPENSEARCH_PASSWORD=admin
    depends_on:
      - gateway
    entrypoint: celery -A config worker --loglevel=info
    restart: always
    scale: 3

  disk_dump_service:
  # Test
  # curl -XPOST http://87.228.88.155:8001/process --json '{"dump_id": "550e8400-e29b-41d4-a716-446655440000", "s3_url": "http://minio/"}'
  # curl -XGET http://87.228.88.155:8001/status/8a78b0e7-dbe4-4d6a-9f44-53695877891f
    build:
      context: disk_dump_service
      dockerfile: Dockerfile
    image: turinabolum_disk_dump_service:latest
    ports:
      - 8001:8001
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_SECURE=False
      - OPENSEARCH_HOST=os01:9200
      - OPENSEARCH_INDEX_PREFIX=disk_dump
      - MAX_WORKERS=4
      - TEMP_DIR=/tmp
    depends_on:
      - minio
    restart: always
    scale: 1
    networks:
      - turinabol_net

volumes:
  redis_data:
  postgres_data:
  minio-data:
  os-data1:

networks:
  turinabol_net:
